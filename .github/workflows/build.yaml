name: Build and Publish Containers

on:
  push:
    branches:
      - main
    paths:
      - '**/Dockerfile'
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * 0' # Every Sunday at 2:00 AM UTC

jobs:
  init:
    name: Init image build
    runs-on: ubuntu-latest

    outputs:
      target: ${{ steps.target.outputs.version }}
      tag: ${{ steps.version.outputs.string }}
      new_image: ${{ github.event_name == 'pull_request' || steps.existing_image.outcome == 'failure' }}

    steps:
      - uses: actions/checkout@v4.2.2

      - name: Fetch Home Assistant version
        id: target
        run: |
          VERSION=$(curl -sSL https://raw.githubusercontent.com/home-assistant/version/master/stable.json | jq -r '.homeassistant.default')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Set version string
        id: version
        run: |
          echo "string=${{ steps.target.outputs.version }}-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Check if image exists
        id: existing_image
        if: ${{ github.event_name != 'pull_request' }}
        continue-on-error: true
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/home-assistant:${{ steps.version.outputs.string }}

  build-and-publish:
    name: Build and Publish Container Images
    runs-on: ubuntu-latest
    needs:
      - init

    strategy:
      matrix:
        container:
          - home-assistant

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Container
        uses: docker/build-push-action@v6.9.0
        with:
          context: ./containers/${{ matrix.container }}
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            TARGET_VERSION=${{ needs.init.outputs.target }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.container }}:${{ needs.init.outputs.tag }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.container }}:latest
